# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_bot:
    
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
      
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        cd bot
        npm install
    - run: npm run prod:build
    - name: bot/dist
      uses: actions/upload-artifact@v2
      with:
        name: bot
        path: bot/dist
        
  build:

    needs: 
      - build_bot
      
    runs-on: self-hosted
    
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Create env file
      run: |
        cd bot
        touch .env
        echo DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }} >> .env
        echo DISCORD_CHANNEL_WEBHOOK=${{ secrets.DISCORD_CHANNEL_WEBHOOK }} >> .env
        echo MONGODB_PRODUCTION_URL=${{ secrets.MONGODB_PRODUCTION_URL }} >> .env
        echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
        echo TWITCH_CLIENT_ID=${{ secrets.TWITCH_CLIENT_ID }} >> .env
        echo TWITCH_CLIENT_SECRET=${{ secrets.TWITCH_CLIENT_SECRET }} >> .env
        echo TWITCH_HUB_CALLBACK=${{ secrets.TWITCH_HUB_CALLBACK }} >> .env
        echo TWITCH_OAUTH_TOKEN=${{ secrets.TWITCH_OAUTH_TOKEN }} >> .env
        echo YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }} >> .env
        cat .env
    - run: npm run down
    - run: docker image prune -a -f
    - run: |
        cd bot
        mkdir dist
    - name: Download dist from build_bot
      uses: actions/download-artifact@v2
      with:
        name: bot
        path: bot/dist
    - run: npm run prod
    - run: docker image prune -a -f
